Jenkins :- Jenkins is a java application. it is platform independent.

---> jenkins is used for continuous integration and continuous delivery

---> Jenkins is open source and written in java that runs on windows,linux and mac.


---> Continous Integration = Continous Build + Continous Testify

---> Pipeline ---> Pipeline is nothing but step by step execution of a process.

---> Jenkins is a heart of the devops. Because it combines the both Dev team and Ops team.



---> Plugin :- Plugin is nothing but a small software which automates your work.


---> Whenever developers write a code, we integrate all the code of all developers at anypoint of time and we build,test and delivery/deploy to client. This is called CI/CD.


jenkins password - 2e34511e605944f6910d8d3538da0262
jenkins URL - http://localhost:8080/



Setting up Jenkins on Tomcat :- There are two ways.
-----------------------------
1. In Linux ---> This describes here.
2. In Windows

---> Requriements :- We should have tomcat5 or above.

---> Java 7 or above will be installed in your system.

Steps :- 

S-1. Download the tomcat.

---> To do that search tomcat and goto downloads and select tomcat 8 in that select zip file.

S-2. Unzip that downloaded file, And place that file on any location.

S-3. Copy and paste the jenkins.war file inside tomcat/webapps folder.

S-4. Goto cmd and enter into tomcat/bin directory location.

---> cd downloads/tomcat/tomcat/bin ---> To enter into tomcat/bin directory.

---> In that folder we have .sh files.

----> All the .sh files are executable.

---> Make all sh file executable ---> To do that we use this command 

---> chmod +x *.sh ---> (chmod ---> We use this for Giving permissions) (+x ---> It is for making it executable) (* ---> All files) (*.sh ---> All files with .sh extention)


S-5 . Start the tomcat server.

---> To start tomcat server we use this command.

Eg :- ./startup.sh  ---> (./ ---> If we already in bin folder then we use dot(.))  (startup  ---> This is the command to start the tomcat server) (.sh ---> File name)

---> Make sure that when we use this command we should in tomcat/bin folder. Otherwise we can describe bin in command.

Eg :- bin/startup.sh

---> If we want to shutdown tomcat server then we use this command.

---> ./shutdown.sh


S-6. Verify if Tomcat started or not.

---> To do that we have go to browser and enter localhost:8080


---> localhost:8080 is an default server.


 
S-7. Verify if jenkins is running on tomcat

---> If we want to see the jenkins in tomcat server than we have to describe this.

---> localhost:8080/jenkins


Note :- Jenkins is stand alone application. Its default port is 8080. if you want to start jenkins on different port we use this command.

Eg:- java -jar jenkins.war --httpPort=9090. (After http the (P) should be caps,otherwise it won't execute).


Setting up Jenkins on Tomcat :- There are two ways.
-----------------------------
1. In Linux 
2. In Windows ---> This describes here.

---> Requriements :- We should have tomcat5 or above.

---> Java 7 or above will be installed in your system.

Steps :- 

S-1. Download the tomcat.

---> To do that search tomcat and goto downloads and select tomcat 8 in that select zip file.

S-2. Unzip that downloaded file, And place that file on any location.

S-3. Copy and paste the jenkins.war file inside tomcat/webapps folder.

S-4 From step 3 come back from webapps and enter into conf folder to configure the port.
 
---> We need to change the port. Because jenkins and tomcat default ports are same.(localhost:8080).

---> To change the tomcat port goto conf folder on tomcat.Open conf and there we find server.xml file. Open the server.xml file in notepad and find for this line. 
		
		Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />

And change the port 8080 to anything we require. for example i use 1010.


		Connector port="1010" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />

S-5 . Start the tomcat server.

---> To start tomcat server goto bin directory and find for startup.bat file. Double click that file and it redirects to cmd and start the tom cat server.

Note:- FileName(.bat) ---> This type of file is for windows.
--->  FileName (.Sh) ---> This type of file is for shell scripting(linux).

---> If we want to shutdown tomcat server then we use to double click on shutdown.bat file.


S-6. Verify if Tomcat started or not.

---> To do that we have go to browser and enter the configured port id. localhost:1010



How to change home directory of jenkins :-
------------------------------------------

---> Home directory of a jenkins is whenever we delpoyed jenkins on any system there is a folder where which is created by default and most of the times the name of the folder is (.)Dot jenkins and default location will be the user profile of the system and this folder contains all information about logs,configuration,jobs Etc.


---> jenkins home directory contains :-

1. All configurations
2. Plugins
3. Job details
4. Logs

Qus. Why do we want to change the jenkins home directory?

Ans. To move jenkins home directory to a location that has enough disk space.

---> Project requriements.

Step For this process :-
------------------------

S-1. Check your current jenkins home directory.

---> Start the jenkins and login in server.
---> After logging in select manage jenkins option.Inside manage jenkins the very first option is configure system.
Open that and we see the Home directory location


S-2. Create a new folder (Which will be a new home directory)

---> Goto another drive and create a folder with any name.


S-3. Copy all data from old directory to new directory.

S-4. Change the environment variable.

---> Goto evn variables ---> System variables ---> Select NEW option.

---> New system variable option will pops up and gives the name and location of folder that we newly created.


S-5. We have to restart the jenkins.

---> After restarting the jenkins the location is changed.

---> To check that we go to manage jenkins ---> configure system and we see the change in top of the window.


Note :- 
-------
1. To restart the jenkins on server.

Eg:- localhost:8080/restart

2. To Know the system information

Eg:- localhost:8080/systemInfo

* While use this address on server the I should be in uppercase. (systemInfo).


How to use Command Line Interface on Jenkins :-
-----------------------------------------------

Reason for using the Command line :-
------------------------------------

1. It's easier to use.
2. It is faster and more convinent.
3. Good memory management.
4. Continuous integration is done on cli.

Steps :-
--------

S-1. Start Jenkins.

S-2. Goto manage jenkins ---> Configure global security ---> Select the enable security option(Tick).

---> After ticking that option we have to save the changes.


S-3. Goto ---> http://localhost:8080/cli/

---> http://localhost:8080/cli/ ---> This address show the all possible command to do on CLI.


S-4. Download the jenkins-cli.jar file and place that on any location.

S-5. Now test the jenkins command line is working or not.

---> To do that open a new terminal and goto that file location and run this command ---> java -jar jenkins-cli.jar -s http://localhost:8080/ ---> This command will present at top of the jenkins cli.

---> After runing this command in terminal, It asks for ssh/id. If we dont know where that shh id, just goto your profile ---> Configure ---> SSH Public keys.

---> At SSH Public keys we have to give somevalues and save that. (Somevalues - pc.19).


How to create users + Manage + Assign Roles :-
----------------------------------------------

1. Creating a new users :- Start the jenkins. goto manage jenkins ---> manage users ---> Create user.

2. Configure Users :- On the top right side you have your profile go to that ---> configure.

---> There we cam configure name, description, email,password,ssh public keys Etc.

3. Create and manage user roles :- To do this we need a plugin called roles strategy.

---> To get that plugin we have to ways :-

First way :- Goto browser ---> type (jenkins role strategy plugin) in url ---> Download the file(This file is downloaded in .hpi Format.)

---> Copy that downloaded file and paste it in your jenkins Home directory(.jenkins) ---> Plugins (Paste it in Plugins directory)

---> Now restart the jenkins.

Second way :- Start jenkins ---> Manage jenkins ---> Manage plugins ---> Select available option and search for that plugin in search box. And download that.

---> Restart the jenkins.

4. After restarting the jenkins, Goto manage jenkins ---> configure global security ---> Authorization.

---> In authorization window we find role based strategy option Select that. (This option will only come after plugin is installed and jenkins is restart)


---> Now goto manage jenkins ---> manage and assign roles(This option will appear only after enabling the role based strategy option inside authorization)

---> After geting entered into manage and assign roles option we find there option.

1. Manage Roles
2. Assign Roles
3. Role strategy macros


---> Inside the Manage role we have three more options.

1. Global Roles :- It provides the authorization and access on a global level.

---> It displays this option (role to add) ---> we have to describe name of user.

2. Project/item Roles :- We can create roles in specific to a project.

---> It displays the same option here like above (Role to add) ---> Here we describe the role of that employee.

Eg :- Role to add - Developer
	 Role to add - Tester

---> And there is one more option here (Pattern) ---> Here we have to specific the what the employee works on.

Eg :- Pattern - Dev.* (If the emloyee is developer than he can have access to all dev patterend files.)
	 pattern - test.* (If the emloyee is tester than he can have access to all test patterend files.)

3. Node Roles - Node roles is also know as slave.


---> Inside the assign Roles We have three options.

1. Global Roles :- Here we have this (user/group to add) option. In this we have to add and specify the employee name to give the rights to access.

2. Project/Item Roles :- Here we have this (user/group to add) option. In this we have to give rights to employee based on his work. if he is developer than give developer rights.

3. Node Roles :- Node role is also know as slave.


Jenkins Basic configuration :-
-----------------------------

1. To display the system message.

---> System message is nothing but displaying the message on top of the Dashboard.

---> The message has two formats.
1. Plain Text ---> It is default.
2. HTML ---> we have enable this option.

---> To enable that option ---> Manage jenkins ---> Configure global security ---> Markup Formatter ---> Here we change the option and save.

---> Manage jenkins ---> Configure System ---> System message.



2. Quiet Period :- It is a period that number of seconds that this particular jenkins instance should wait before triggering a job.


Creating JOBS in Jenkins :-
---------------------------

1. Start jenkins ---> new item ---> Enter item name and select project type and press OK ---> Add Details.

---> Enter into that project ---> build now. And you can view your build history on the left side.


2. How to trigger the job remotely :-

---> Goto to the project ---> Goto configure ---> Build triggers ---> Enable trigger builds remotely.

---> After enabling that it gives the link, copy that link and paste it in new window.


---> JENKINS_URL/job/demo/build?token=TOKEN_NAME or /buildWithParameters?token=TOKEN_NAME

---> JENKINS_URL ---> here we have to give your systems ip address or localhost.

---> TOKEN_NAME ---> Here we have to give the token name.

---> Eg :-  localhost:8080/job/demo/build?token=TOKEN_NAME or /buildWithParameters?token=1919


3. How to chain job executions :-


---> If we have a multiple projects and we want to excute(Run Jobs) them on automatically one by one.

Steps :-
-------

S-1. Start jenkins ---> Create multiple Projects.

Eg:- If we create 3 projects demo1,demo2,demo3. Enter into demo 2 and cofigure.

S-2 . Demo2 ---> Configure ---> Build Triggers ---> enable Build after other projects are built.

---> After enabling that specify the projects to build first.

S-3. Goto build and select command line ---> give the command 

S-4. Post build actions ---> specify the project name and save.

S-5 . Goto dashboard and build the first project. the mentioned projects will build automatically one after another.



Jenkins Integration with GIT (SCM) :-
------------------------------------

1. Create a java program and run it through command line.

2. Create a jenkins job to run the java program.

3. Add this program/project to GIT.

4. Jenkins - Add git plugin

5. Configure jenkins job to trigger the execution when a change is pusged to GITHUB.

Steps :-
--------

S-1 . Create any language file, place that on any location.

---> Run that on cmd. If we write java file than run and execute that file.

Syntax :- Javac filename with extention
eg :- javac hello.java

syntax :- Javac filename
Eg :- java hello

---> If execution is done then start jenkins and create a job.


S-2 . Create a jenkins job to run the program.


---> Start jenkins ---> Create New item

---> After creating the new item goto build section and give the commands to execute that file.

Eg :- C:\Users\admin.EXEL\Desktop\project  ---> First specify the location.

---> javac hello.java
---> java hello ---> To execute java file give these commands.

---> After configuring the project now build that.

S-3 . Add the project to Git and GitHub.

---> After the step three goto jenkins and check for git plugin.

---> Start jenkins ---> Manage jenkins ---> manage plugins ---> From there we have to download the plugin.


S-4 . Configure the jenkins job

---> Open the created project (Hello)---> (project name is hello) ---> configure ---> Source code management.

---> In SCM Section, After installing the GIT plugin now we see the Git option there.

---> Enable that Git option.

---> Give the URL of your remote repository.

---> Now goto Build Triggers Section and enable the Poll SCM option and give the cron expression there. Because how often and what intervals you want this particular job to check the source code repository to check for the changes.

---> Cron expression :- * * * * * ---> This five stars idicates check for every minute. And there are many cron expressions.

Note :- While using this expression we should give space to each star.

S-5 . To see its integrated or not, Create new files in your working directory and add those file to remote repository.
Then goto project and see build history.


Adding GitHub credentials in jenkins :-
---------------------------------------

---> To add the credentials first we have the credentials plugin.

---> Start jenkins ---> Manage jenkins ---> Manage plugins ---> Download the credentials plugin

---> Start jenkins ---> Manage jenkins ---> Manage credentials ---> Add the credentials. (While adding Git Credentials there is a option called "ID" in the we won't specify anything.)

---> After adding the credentials now goto new item and create a project.

---> New Item ---> Source code management ---> Enable the Git option.

---> Add the GitHub URL there and add credentials. Now it will save in .jenkins ---> Jobs.

---> If you don't want to save in default location, Then goto General ---> Advanced ---> enable the option use custom workspace (In that we have to specify the path for your working directory). 


How to use catlight on jenkins :- It is a monitoring tool for jenkins.
---------------------------------

---> catlight is a status notifier for the developer.

---> Catlight will monitor all the jobs on your jenkins and whenever there is any status change or anything that needs your attention it will pop up on your desktop and you will get notified of all the changes.

---> Catlight will notify you when builds,bugs and tasks need your attention.

---> We can choose things to track and see the status in  tray.


Download process :- Goto downloads select the OS based on your requirement.

---> After download just open that file and run.

---> It asks us which project will i monitor,you can select all or required project.



Automated Deployment :-
-----------------------

---> Main stages in continuous delivery and deployment pipeline of a software.

---> BUILD ---> DEPLOY ---> TEST ---> RELEASE


---> Automated deployment is the process of automating the deployment process in a continuous delivery system.


Steps:-
-------

S-1. Start the jenkins.

S-2. Install the deploy plugin.(Deploy to container plugin)

---> Restart the jenkins.

S-3. Create a build job in jenkins.

---> Before creating the build job we should have war/ear file present in your system. for now we downloading the sample war file.

---> Start jenkins ---> New item ---> Build (Give sample command like date.)

S-4. Add post-build action Deploy war/ear to container (Add values to the fileds.)

---> start jenkins ---> new item --- Build ---> Post-build actions ---> Select Deploy war/ear to a container.


---> In post build actions fill the fileds.

---> In context path we specify war file location.(We have copy the war file to jenkins workspace. The workspace is available in .jenkins directory.)

---> Now add the container, There are many containers you can add based on your requirement. For now we add tomcat 7. 


S-5. In Tomcat-users.xml file add user for deployment.

---> Before this step we have to install the tomcat in you system.

---> config the username and password on tamcat users.xml file.

---> After configuring the tomcat, Start the tomcat and run.


S-6. Run and Validate

---> Before that add the username and password in jenkins 

---> Build the job and deployment will be done.


Note :- If jenkins and tomcat are running on the same system, ensure to use different ports.


How to send email from jenkins :-
---------------------------------

---> Start jenkins ---> Manage jenkins ---> configure system ---> Email notifications

---> We have to describe SMTP server. The SMTP server for gmail is smtp.gmail.com. (If we use any other emails we can find your smtp server on internet.)

---> Now go to advanced section ---> Enable the SMTP Authentication.

---> In SMTP Authentication file the fields.

---> Select the SSL option. (Incase of we use Gmail)

---> SMTP port ---> Most probably these are the gmail ports 465,587,25.

---> Enable the test configuration by sending test email.(For testing purpose only we tick this option)

---> Give the emailid and press test configuration button.


Pipeline in jenkins :-
---------------------

---> Pipeline is a workflow with group of events or jobs that are chained and intergrated with each other in sequence.

---> Every job in a pipeline has some dependency on one or more other jobs.


Setting up continuous delivery pipeline :-
------------------------------------------

Steps :-
-------

S-1. Chain requried jobs in sequence (Add upstream/downstream jobs)

---> first we have to create a sample jobs like, build job,deploy job and test job.

---> In every job goto build ---> add build step ---> Execute shell ---> Enter executable commands.

---> Executable commands ---> date, echo "This test job is successful"

---> Chain these three jobs.

---> goto secondly created job. in this case deploy job is created secondly ---> configure ---> build triggers ---> build after other projects are built ---> specify the first project name.(In this case first project is build job.)

---> goto to third project.(In this case test is created third.) ---> configure ---> build triggers ---> build after other projects are built ---> specify the second project name.(In this case second project is deploy job.)

S-2. Install the delivery pipeline plugin.

---> Start jenkins ---> Manage jenkins ---> Manage plugins ---> goto available section and search for delivery pipeline plugin and install and restart jenkins.

S-3. Add delivery pipeline view. (Configure the view)

---> Goto the dashboard and you see the Plus(+) icon on top press that give the name and select delivery pipeline view option.

---> (+)Plus symbol is for view.

---> After adding, now we discuss above few useful options.

1. Enable start of new pipeline build ---> This will create a run button in pipeline view and it build the new pipeline.

2. Enable rebuild ---> This will create a rebuild button on jobs. To run a particular job in the same pipeline we can use this option

3. Show total build time ---> This will show the how much time it take to a build your jobs.


Note :- BUild triggers is not applicable for the first jobs.



Setting up build pipeline :-
-----------------------------

Steps :-
-------

S-1. Chain requried jobs in sequence (Add upstream/downstream jobs)

S-2. Install Build pipeline plugin.

---> Start jenkins ---> Manage jenkins ---> Manage plugins ---> goto available section and search for Build pipeline plugin and install and restart jenkins.

S-3. Add Build pipeline view. (Configure the view)

---> Goto the dashboard and you see the Plus(+) icon on top press that give the name and select Build pipeline view option.


Blue ocean in Jenkins :-
------------------------

---> A blue ocean is new user experience for jenkins. Which is designed to reduces the clutter and increases the clarity.

---> To use blue ocean,ensure that you have jenkins 2.7 or above version.

Steps :-
--------

S-1. Install the blue ocean plugin.

---> Start jenkins ---> Manage jenkins ---> Manage plugins ---> goto available section and search for Blue ocean plugin and install and restart jenkins.

S-2. Switch to blue ocean view. It appears in leftside.

---> It provides very interactive UI.


How to trigger a job with Email :-
---------------------------------

Steps :-
--------
S-1. Start jenkins

S-2. Install the Poll mailbox trigger plugin

---> Start Jenkins ---> Manage jenkins ---> Manage plugins ---> Goto available section and install the plugin.

---> After installing the plugin, create the new job.

---> New Job ---> Configure ---> Build triggers ---> Tick the poll mailbox trigger option.

---> After ticking that option give the email and password.

---> Select the advanced option ---> Advanced email option(Give the expression), Schedule(Give the cron expression)

---> Goto email and send the mail to yourself with the subject that we specified in jenkins. and goto jenkins and run test connection again.

---> Goto build and execute the command based on requriement.

---> Run the job and see the output in console.


Build Monitor View :-
----------------------
---> Build monitor plugin provides a highly visible view of the status of selected jenkins jobs.

Steps :-
--------

---> Start Jenkins ---> Manage jenkins ---> Manage plugins ---> goto available section ---> download build monitor view plugin.

---> After installing the pluging,goto dashboard ---> View ---> enable build monitor view.

---> After enabling that option it will takes you to configuration screen in that, goto Job filters ---> select the required jobs.

---> After that select required option and press apply and save. it will takes you to build monitor view. It shows your jobs.
